-- Script de inicialização para PostgreSQL

-- Tabela CENTROS_CUSTO
CREATE TABLE IF NOT EXISTS CENTROS_CUSTO(
    ATIVO BOOLEAN NOT NULL,
    ID BIGSERIAL PRIMARY KEY,
    NOME VARCHAR(255) NOT NULL
);

-- Inserindo dados iniciais na CENTROS_CUSTO
INSERT INTO CENTROS_CUSTO VALUES
(TRUE, 1, 'Caixa Organ');

-- Tabela CENTRO_CUSTO (tabela principal que estava faltando)
CREATE TABLE IF NOT EXISTS CENTRO_CUSTO(
    ATIVO BOOLEAN NOT NULL,
    ENTRADAS DOUBLE PRECISION DEFAULT 0.0 NOT NULL,
    SAIDAS DOUBLE PRECISION DEFAULT 0.0 NOT NULL,
    ID BIGSERIAL PRIMARY KEY,
    NOME VARCHAR(255) NOT NULL
);

-- Inserindo dados iniciais na CENTRO_CUSTO
INSERT INTO CENTRO_CUSTO VALUES
(TRUE, 0.0, 0.0, 1, 'TAXA DE ENCONTRO DOS PAIS'),
(TRUE, 0.0, 0.0, 2, 'REPASSE REGIONAL'),
(TRUE, 0.0, 0.0, 3, 'REPASSE NACIONAL'),
(TRUE, 0.0, 0.0, 4, 'TARIFAS BANCÁRIAS - SAQUE'),
(TRUE, 0.0, 0.0, 5, 'DESPESAS DE MANUTENÇÃO'),
(TRUE, 0.0, 0.0, 6, 'IMPOSTO ISS'),
(TRUE, 0.0, 0.0, 7, 'CONCESSIONÁRIA DE ENERGIA ELÉTRICA'),
(TRUE, 0.0, 0.0, 8, 'CONSTRUÇÃO'),
(TRUE, 0.0, 0.0, 9, 'BENEFICÊNCIA - CESTA ALIMENTAÇÃO - ZELADOR'),
(TRUE, 0.0, 0.0, 10, 'MANUTENÇÃO UNIDADE'),
(TRUE, 0.0, 0.0, 11, 'ORIENTAÇÃO ESPIRITUAL');

-- Tabela COBRANCAS
CREATE TABLE IF NOT EXISTS COBRANCAS(
    DATA_PAGAMENTO DATE,
    DATA_VENCIMENTO DATE NOT NULL,
    VALOR FLOAT NOT NULL,
    FORNECEDOR_ID BIGINT,
    GRUPO_MENSALIDADE_ID BIGINT,
    ID BIGSERIAL PRIMARY KEY,
    RUBRICA_ID BIGINT,
    SOCIO_ID BIGINT,
    TRANSACAO_ID BIGINT,
    DESCRICAO VARCHAR(255),
    PAGADOR VARCHAR(255),
    STATUS VARCHAR(255) NOT NULL,
    TIPO_COBRANCA VARCHAR(255) NOT NULL,
    TIPO_MOVIMENTO VARCHAR(255) NOT NULL
);

-- Tabela CONTAS_FINANCEIRAS
CREATE TABLE IF NOT EXISTS CONTAS_FINANCEIRAS(
    SALDO_ATUAL FLOAT NOT NULL,
    ID BIGSERIAL PRIMARY KEY,
    NOME VARCHAR(255) NOT NULL
);

-- Tabela GRUPO_MENSALIDADE_RUBRICAS
CREATE TABLE IF NOT EXISTS GRUPO_MENSALIDADE_RUBRICAS(
    GRUPO_MENSALIDADE_ID BIGINT NOT NULL,
    RUBRICA_ID BIGINT NOT NULL,
    PRIMARY KEY(GRUPO_MENSALIDADE_ID, RUBRICA_ID)
);

-- Tabela CONTAS_A_PAGAR
CREATE TABLE IF NOT EXISTS CONTAS_A_PAGAR(
    DATA_PAGAMENTO DATE,
    DATA_VENCIMENTO DATE NOT NULL,
    VALOR NUMERIC(38, 2) NOT NULL,
    FORNECEDOR_ID BIGINT NOT NULL,
    ID BIGSERIAL PRIMARY KEY,
    RUBRICA_ID BIGINT NOT NULL,
    DESCRICAO VARCHAR(255) NOT NULL,
    STATUS VARCHAR(255) NOT NULL
);

-- Tabela CONTA_FINANCEIRA
CREATE TABLE IF NOT EXISTS CONTA_FINANCEIRA(
    SALDO_ATUAL FLOAT NOT NULL,
    ID BIGSERIAL PRIMARY KEY,
    NOME VARCHAR(255) NOT NULL
);

-- Inserindo dados iniciais na CONTA_FINANCEIRA
INSERT INTO CONTA_FINANCEIRA VALUES
(-760.66003, 1, 'BANCO CORA ');

-- Tabela GRUPOS_MENSALIDADE
CREATE TABLE IF NOT EXISTS GRUPOS_MENSALIDADE(
    ID BIGSERIAL PRIMARY KEY,
    NOME VARCHAR(255) NOT NULL
);

-- Inserindo dados iniciais na GRUPOS_MENSALIDADE
INSERT INTO GRUPOS_MENSALIDADE VALUES
(33, 'tesoureiro');

-- Tabela CONTAS_PAGAR
CREATE TABLE IF NOT EXISTS CONTAS_PAGAR(
    DATA_PAGAMENTO DATE,
    DATA_VENCIMENTO DATE NOT NULL,
    VALOR FLOAT NOT NULL,
    FORNECEDOR_ID BIGINT,
    ID BIGSERIAL PRIMARY KEY,
    RUBRICA_ID BIGINT NOT NULL,
    DESCRICAO VARCHAR(255) NOT NULL,
    STATUS VARCHAR(255) NOT NULL
);

-- Tabela FORNECEDOR_ENDERECOS
CREATE TABLE IF NOT EXISTS FORNECEDOR_ENDERECOS(
    FORNECEDOR_ID BIGINT NOT NULL,
    BAIRRO VARCHAR(255),
    CEP VARCHAR(255),
    CIDADE VARCHAR(255),
    COMPLEMENTO VARCHAR(255),
    ESTADO VARCHAR(255),
    LOGRADOURO VARCHAR(255),
    NUMERO VARCHAR(255)
);

-- Tabela FORNECEDORES
CREATE TABLE IF NOT EXISTS FORNECEDORES(
    ATIVO BOOLEAN NOT NULL,
    DATA_CADASTRO DATE NOT NULL,
    ID BIGSERIAL PRIMARY KEY,
    CELULAR VARCHAR(20),
    CNPJ VARCHAR(20) NOT NULL,
    TELEFONE_COMERCIAL VARCHAR(20),
    EMAIL VARCHAR(100),
    NOME VARCHAR(255) NOT NULL
);

-- Inserindo dados iniciais nos FORNECEDORES
INSERT INTO FORNECEDORES VALUES
(TRUE, '2025-09-07', 1, '', ' 06.840.748/0001-89', '', '', 'Equatorial'),
(TRUE, '2025-09-09', 65, '', '01436224000103', '', '', 'CENTRO ESPIRITA BENEFICENTE UNIAO DO VEGETAL NUCLEO MESTRE SIDOM'),
(TRUE, '2025-09-09', 66, '', '69613776000183', '', '', 'BRAZ E OLIVEIRA LTDA'),
(TRUE, '2025-09-09', 67, '', '02291842000175', '', '', 'ILUMINAR COMERCIO E ENGENHARIA LTDA'),
(TRUE, '2025-09-09', 68, '', '07410412356', '', '', 'Magna da Silva Vilanova Castro'),
(TRUE, '2025-09-09', 69, '', '01299729320', '', '', 'Carlos Eduardo Carvalho de Araujo'),
(TRUE, '2025-09-09', 70, '', '60108877396', '', '', 'PLAUGUS D ITALO SOUSA ALMEIDA'),
(TRUE, '2025-09-09', 71, '', '16926583000116', '', '', 'M. DOS R. ALENCAR DE CARVALHO'),
(TRUE, '2025-09-09', 72, '', '01196204489', '', '', 'SERGE ERIC PITTET'),
(TRUE, '2025-09-09', 73, '', '65584694304', '', '', 'ALAN SERVIO ARAUJO'),
(TRUE, '2025-09-09', 74, '', '37880206000163', '', '', 'Cora SCFI'),
(TRUE, '2025-09-09', 75, '', 'SEM_86e63dd0-0699-43', '', '', 'TECBAN-SUP MATEUS MIX     -');

-- Tabela GRUPO_MENSALIDADE
CREATE TABLE IF NOT EXISTS GRUPO_MENSALIDADE(
    ID BIGSERIAL PRIMARY KEY,
    NOME VARCHAR(255)
);

-- Inserindo dados iniciais na GRUPO_MENSALIDADE
INSERT INTO GRUPO_MENSALIDADE VALUES
(1, 'GRUPO MENSALIDADE BASICO - 135'),
(2, 'GRUPO MENSALIDADE BASICO OE - 145'),
(3, 'GRUPO MENSALIDADE MINIMO - 80'),
(4, 'GRUPO MENSALIDADE 80'),
(5, 'GRUPO MENSALIDADE  MINIMO- 70'),
(6, 'GRUPO MENSALIDADE BASICO 120'),
(7, 'GRUPO MENSALIDADE  MINIMO- 55'),
(8, 'GRUPO MENSALIDADE CESTA  BENEFICENCIA  - 165'),
(9, 'GRUPO MENSALIDADE  SUPER MINIMO -30'),
(33, 'GRUPO MENSALIDADE BASICO 50'),
(34, 'GRUPO MENSALIDADE  150'),
(35, 'GRUPO MENSALIDADE 90');

-- Tabela GRUPO_MENSALIDADE_RUBRICA
CREATE TABLE IF NOT EXISTS GRUPO_MENSALIDADE_RUBRICA(
    VALOR FLOAT NOT NULL,
    GRUPO_MENSALIDADE_ID BIGINT NOT NULL,
    ID BIGSERIAL PRIMARY KEY,
    RUBRICA_ID BIGINT NOT NULL
);

-- Tabela RUBRICAS
CREATE TABLE IF NOT EXISTS RUBRICAS(
    ATIVO BOOLEAN NOT NULL,
    ID BIGSERIAL PRIMARY KEY,
    NOME VARCHAR(255) NOT NULL
);

-- Inserindo dados iniciais nas RUBRICAS
INSERT INTO RUBRICAS VALUES
(TRUE, 1, 'Taxa de Encontro dos Pais'),
(TRUE, 2, 'Doações'),
(TRUE, 3, 'Taxa de Manutenção'),
(TRUE, 4, 'Taxa de Estacionamento'),
(TRUE, 5, 'Mensalidades'),
(TRUE, 6, 'Taxa de Inscrição'),
(TRUE, 7, 'Tarifa Bancária'),
(TRUE, 8, 'Aluguel'),
(TRUE, 9, 'Água'),
(TRUE, 10, 'Luz'),
(TRUE, 11, 'Internet'),
(TRUE, 12, 'Telefone'),
(TRUE, 13, 'Material de Limpeza'),
(TRUE, 14, 'Material de Escritório'),
(TRUE, 15, 'Beneficência'),
(TRUE, 16, 'Construção'),
(TRUE, 17, 'Reparos'),
(TRUE, 18, 'Imposto'),
(TRUE, 19, 'Seguro'),
(TRUE, 20, 'Taxa de Serviço');

-- Tabela GRUPOS_FINANCEIROS
CREATE TABLE IF NOT EXISTS GRUPOS_FINANCEIROS(
    ATIVO BOOLEAN NOT NULL,
    ID BIGSERIAL PRIMARY KEY,
    DESCRICAO VARCHAR(255),
    NOME VARCHAR(255) NOT NULL UNIQUE
);