{
  "tech_stack": ["Java", "Spring Boot", "PostgreSQL", "H2 Database", "Thymeleaf", "JPA/Hibernate", "Maven", "JasperReports"],
  "features": [
    {
      "name": "Socio Management",
      "description": "API for managing members (socios) including creation, retrieval, updating, and deletion. Also includes functionality for managing member statuses and relationships.",
      "files": [
        "src/main/java/br/com/sigest/tesouraria/service/SocioService.java",
        "src/main/java/br/com/sigest/tesouraria/repository/SocioRepository.java",
        "src/main/java/br/com/sigest/tesouraria/domain/entity/Socio.java",
        "src/test/java/br/com/sigest/tesouraria/service/SocioServiceTest.java"
      ],
      "api_doc": {
        "openapi": "3.0.1",
        "info": {
          "title": "Socio Management API",
          "description": "API for managing members (socios)",
          "version": "1.0.0"
        },
        "paths": {
          "/api/socios": {
            "get": {
              "summary": "Get all socios",
              "responses": {
                "200": {
                  "description": "Successful response"
                }
              }
            },
            "post": {
              "summary": "Create a new socio",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Socio"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful response"
                }
              }
            }
          },
          "/api/socios/{id}": {
            "get": {
              "summary": "Get a socio by ID",
              "parameters": [
                {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful response"
                }
              }
            },
            "put": {
              "summary": "Update a socio",
              "parameters": [
                {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer"
                  }
                }
              ],
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Socio"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful response"
                }
              }
            },
            "delete": {
              "summary": "Delete a socio",
              "parameters": [
                {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "integer"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful response"
                }
              }
            }
          }
        },
        "components": {
          "schemas": {
            "Socio": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "nome": {
                  "type": "string"
                },
                "cpf": {
                  "type": "string"
                },
                "grau": {
                  "type": "string"
                },
                "dataNascimento": {
                  "type": "string",
                  "format": "date"
                },
                "status": {
                  "type": "string",
                  "enum": ["FREQUENTE", "NAO_FREQUENTE", "ADIMPLENTE", "INADIMPLENTE"]
                }
              }
            }
          }
        }
      }
    }
  ]
}